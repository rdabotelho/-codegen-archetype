template {
	sourceFile: 'edit.js'
	targetFile: 'src/components/${domain.name.camelCase}/${domain.name}Edit.js'
	scope: 'entity'
	block(2, 2) {
		replace('Employee', domain.name)
	}	
	block(3, 3, 'OR') {
		iterate(domain.attributes, item) {
			showIf(item.oneToOne, 'true')
			showIf(item.oneToMany, 'true')
			replace('OtherDomain', item.type)
		}
	}	
	block(6, 6) {
		replace('Employee', domain.name)
	}
	block(10, 10) {
		iterate(domain.attributes, item) {
			replace('FirstName', item.name.pascalCase)
		}
	}
	block(15, 15) {
		iterate(domain.attributes, item) {
			replace('firstName', item.name)
			delimiter('',',','')
		}
	}
	block(18, 23) {
		iterate(domain.attributes, item) {
			replace('firstName', item.name)
			replace('FirstName', item.name.pascalCase)
		}
	}
	block(27, 27) {
		replace('Employee', domain.name)
	}
	block(30, 30) {
		iterate(domain.attributes, item) {
			replace('firstName', item.name)
			delimiter('',',','')
		}
	}
	block(36, 41, 'OR') {
		iterate(domain.attributes, item) {
			showIf(item.oneToOne, 'true')
			showIf(item.oneToMany, 'true')
			replace('OtherDomain', item.type)
			replace('otherDomain', item.type.camelCase)
		}
	}	
	block(49, 50) {
		iterate(domain.attributes, item) {
			block (49, 49, 'OR') {
				showIf(item.basic, 'true')
				showIf(item.enum, 'true')
				replace('firstName', item.name)
			}
			block (50, 50, 'OR') {
				showIf(item.oneToOne, 'true')
				showIf(item.oneToMany, 'true')
				replace('otherDomain', item.name)
			}
		}
	}
	block(53, 55) {
		replace('Employee', domain.name)
	}
	block(67, 67) {
		replaceIf('Employee', domain.label, domain.label.notEquals, '', domain.name)
	}
	block(69, 84) {
		iterate(domain.attributes, item) {
			block(69, 70) {
				replaceIf('First Name', item.label, item.label.notEquals, '', item.name.pascalCase)
			}
			block(71, 71) {
				showIf(item.type.lowerCase.equals, 'string')
				replace('firstName', item.name)
				replace('FirstName', item.name.pascalCase)
			}
			block(72, 72) {
				showIf(item.type.lowerCase.equals, 'number')
				replace('firstName', item.name)
				replace('FirstName', item.name.pascalCase)
			}
			block(73, 73) {
				showIf(item.type.lowerCase.equals, 'date')
				replace('firstName', item.name)
				replace('FirstName', item.name.pascalCase)
			}
			block(74, 84) {
				block(74, 75) {
					showIf(item.enum.equals, 'true')
					replace('firstName', item.name)
					replace('FirstName', item.name.pascalCase)
				}
				block(76, 76) {
					showIf(item.enum.equals, 'true')
					iterate(item.typeDomain.attributes, enumValue) {
						replace('enumValueName', enumValue.name)
					}
				}
				block(77, 77) {
					showIf(item.enum.equals, 'true')
				}
				block(78, 83, 'OR') {
					showIf(item.oneToOne, 'true')
					showIf(item.oneToMany, 'true')
					replace('OtherDomain', item.type)
					replace('otherDomain', item.type.camelCase)
					replaceIf('fieldLabel', item.typeDomain.fieldLabel, item.typeDomain.fieldLabel.notEquals, '', 'id')
				}
			}
		}
	}
	block(95, 95) {
		replace('Employee', domain.name)
	}
}
