template {
	sourceFile: 'mapper.java'
	targetFile: 'src/main/java/${PACKAGE.convertDotToSlash}/domain/mapper/${domain.name}Mapper.java'
	scope: 'entity'
	block(1, 1) {
	    replace('com.example.demo', PACKAGE)
	}
	block(2, 4) {
	    replace('com.example.demo', PACKAGE)
		replace('DomainName', domain.name.pascalCase)
	}
	block(5, 5) {
	    showIf(domain.attributes.contains, 'list', 'true')
	}
	block(7, 9) {
		replace('DomainName', domain.name.pascalCase)
	}
	block(10, 13) {
		replace('DomainName', domain.name.pascalCase)
	}
	block(16, 18) {
		replace('DomainName', domain.name.pascalCase)
	}
	block(20, 22) {
	    iterate(domain.attributes, item) {
	        block(20, 20) {
                showIf(item.basic.equals, 'true')
                replace('Attribute', item.name.pascalCase)
	        }
	        block(21, 21) {
                showIf(item.oneToOne.equals, 'true')
                replace('Other', item.type)
                replace('Attribute', item.name.pascalCase)
	        }
	        block(22, 22) {
                showIf(item.list.equals, 'true')
                replace('Other', item.typeDomain.name)
                replace('Attribute', item.name.pascalCase)
	        }

	    }
	}
	block(26, 28) {
		replace('DomainName', domain.name.pascalCase)
	}
	block(30, 32) {
	    iterate(domain.attributes, item) {
	        block(30, 30) {
                showIf(item.basic.equals, 'true')
                replace('Attribute', item.name.pascalCase)
	        }
	        block(31, 31) {
                showIf(item.oneToOne.equals, 'true')
                replace('Other', item.type)
                replace('Attribute', item.name.pascalCase)
	        }
	        block(32, 32) {
                showIf(item.list.equals, 'true')
                replace('Other', item.typeDomain.name)
                replace('Attribute', item.name.pascalCase)
	        }

	    }
	}

}
