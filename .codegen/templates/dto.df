template {
	sourceFile: 'dto.java'
	targetFile: 'src/main/java/${PACKAGE.convertDotToSlash}/domain/dto/${domain.name}Dto.java'
	scope: 'entity'
	block(1, 1) {
	    replace('com.example.demo', PACKAGE)
	}
	block(2, 4) {
	    showIf(domain.attributes.contains, 'list', 'true')
	}
	block(5, 5) {
	    showIf(domain.attributes.contains, 'type', 'DateTime')
	}
	block(6, 6) {
	    showIf(domain.attributes.contains, 'type', 'Date')
	}
	block(8, 8) {
		replace('DomainName', domain.name.pascalCase)
	}
	block(11, 13) {
	    iterate(domain.attributes, item) {
	        block(11, 11) {
                showIf(item.basic.equals, 'true')
                replace('String', item.type)
                replace('attribute', item.name)
				replace('Date ', 'LocalDate ')
				replace('DateTime ', 'LocalDateTime ')				
	        }
	        block(12, 12) {
                showIf(item.oneToOne.equals, 'true')
                replace('Other', item.type)
                replace('attribute', item.name)
	        }
	        block(13, 13) {
                showIf(item.list.equals, 'true')
                replace('Other', item.typeDomain.name)
                replace('attribute', item.name)
	        }
	    }
	}
	block(22, 45) {
	    iterate(domain.attributes, item) {
	        block(22, 29) {
                showIf(item.basic.equals, 'true')
                replace('String', item.type)
    			replace('Attribute', item.name.pascalCase)
                replace('attribute', item.name)
				replace('Date ', 'LocalDate ')
				replace('DateTime ', 'LocalDateTime ')
	        }
	        block(30, 37) {
                showIf(item.oneToOne.equals, 'true')
                replace('Other', item.type)
    			replace('Attribute', item.name.pascalCase)
                replace('attribute', item.name)
	        }
	        block(38, 45) {
                showIf(item.list.equals, 'true')
                replace('Other', item.typeDomain.name)
    			replace('Attribute', item.name.pascalCase)
                replace('attribute', item.name)
	        }
	    }
	}
	block(46, 52) {
        replace('DomainName', domain.name)
        replace('domainName', domain.name.camelCase)
	}
}
