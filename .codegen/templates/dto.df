template {
	sourceFile: 'dto.java'
	targetFile: 'src/main/java/${PACKAGE.convertDotToSlash}/domain/dto/${domain.name}Dto.java'
	scope: 'entity'
	block(1, 1) {
	    replace('com.example.demo', PACKAGE)
	}
	block(3, 4) {
	    showIf(domain.attributes.contains, 'list', 'true')
	}
	block(6, 6) {
		replace('DomainName', domain.name.pascalCase)
	}
	block(9, 12) {
	    iterate(domain.attributes, item) {
	        block(9, 9) {
                showIf(item.basic.equals, 'true')
                replace('String', item.type)
                replace('attribute', item.name)
				replace('Date ', 'String ')
				replace('DateTime ', 'String ')
	        }
	        block(10, 10) {
                showIf(item.enum, 'true')
                replace('attribute', item.name)
	        }
	        block(11, 11) {
                showIf(item.oneToOne.equals, 'true')
                replace('Other', item.type)
                replace('attribute', item.name)
	        }
	        block(12, 12) {
                showIf(item.list.equals, 'true')
                replace('Other', item.typeDomain.name)
                replace('attribute', item.name)
	        }
	    }
	}
	block(21, 52) {
	    iterate(domain.attributes, item) {
	        block(21, 28) {
                showIf(item.basic.equals, 'true')
    			replace('Attribute', item.name.pascalCase)
                replace('attribute', item.name)
	        }
	        block(29, 36) {
                showIf(item.enum, 'true')
    			replace('Attribute', item.name.pascalCase)
                replace('attribute', item.name)
	        }
	        block(37, 44) {
                showIf(item.oneToOne.equals, 'true')
                replace('Other', item.type)
    			replace('Attribute', item.name.pascalCase)
                replace('attribute', item.name)
	        }
	        block(45, 52) {
                showIf(item.list.equals, 'true')
                replace('Other', item.typeDomain.name)
    			replace('Attribute', item.name.pascalCase)
                replace('attribute', item.name)
	        }
	    }
	}
	block(55, 59) {
        replace('DomainName', domain.name)
        replace('domainName', domain.name.camelCase)
	}
}
